async def on_ready(self):
    print(f'{self.user} has connected to Discord!')
    for guild in self.guilds:
        print(f'{guild.name}(id: {guild.id})')


async def on_member_join(self, member):
    print("New Member!")
    await member.create_dm()
    await member.dm_channel.send(file=discord.File("/source/sounds/welcome.mp3"))
----------------------------------------------------------------------
    # voice_client = get(ctx.bot.voice_clients, guild=ctx.guild)
    # channel = discord.utils.get(ctx.bot.get_all_channels(), guild__name='Cool', name='general')
    # print(voice_client.disconnect())

    # await ctx.guild.ban(user, reason="Testing", delete_message_days=0)

----------------------------------------------------------------------
# # disconnect user
#     victim_member = discord.utils.get(ctx.guild.members, name=victim.name)
#     kick_channel = await ctx.guild.create_voice_channel("kick")
#     try:
#         await victim_member.move_to(None)
#     except Exception as e:
#         pass
#     await kick_channel.delete()

----------------------------------------------------------------------
# @bot.command()
# async def kill(ctx, victim: discord.Member):
#     # connect bot to user
#     if ctx.author.voice is None or ctx.author.voice.channel is None:
#         await ctx.send('Bruh, you are not connected to voice chat!')
#         return
#
#     # play sound and test if we already in channel
#     voice_channel = ctx.author.voice.channel
#     if ctx.voice_client is None:
#         vc = await voice_channel.connect(reconnect=False)
#     else:
#         await ctx.voice_client.move_to(voice_channel)
#         vc = ctx.voice_client
#     vc.play(discord.FFmpegPCMAudio(executable="source\\ffmpeg\\bin\\ffmpeg.exe",
#                                    source="source\\sounds\\headshot.mp3"))
#     await asyncio.sleep(1)
#
#     # disconnect user
#     victim_member = discord.utils.get(ctx.guild.members, name=victim.name)
#     await victim_member.move_to(None)
#
#     # disconnect bot
#     await vc.disconnect()
# ---------------------------------------------------------------------------
# dialogs = {'welcome': '–Ø —Å–º–æ—Ç—Ä—é —Ç—ã –≤–æ–æ–±—â–µ –Ω–µ –ø–æ–Ω–∏–º–∞–µ—à—å –≤ –∫–∞–∫–æ–º –º–µ—Å—Ç–µ —Ç—ã –æ–∫–∞–∑–∞–ª—Å—è?\n'
#                       '–≠—Ç–æ –±–ª—è—Ç—å —Å–µ—Ä–≤–µ—Ä —Å–º–µ—Ä—Ç–∏\n'
#                       '–ì–¥–µ —Ç–µ–±–µ –º–æ–≥—É—Ç –≤—Å–∞–¥–∏—Ç—å –ø—É–ª—é –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–µ–∫—É–Ω–¥—ã\n'
#                       '–ò —Ç—ã –±—É–¥–µ—à—å —Å–∏–¥–µ—Ç—å –Ω–∞ –Ω–µ–±–µ—Å–∞—Ö –∏ —Ä—ã–¥–∞—Ç—å –∫–∞–∫ —Å—É—á–∫–∞ –ø–æ–∫–∞–º–∏—Å—å —Ç–≤–æ–π —Ç—Ä—É–ø –ª—É—Ç–∞–µ—Ç —Ä–æ–¥–∏–æ–Ω.\n'
#                       '–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –∑–Ω–∞—Ç—å –∫–∞–∫ –ø—Ä–æ–∂–∏—Ç—å —Ö–æ—Ç—è –±—ã –ø—è—Ç—å –º–∏–Ω—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —Å–º–µ—Ä—Ç–∏ - –ø—Ä–æ—Å–ª—É—à–∞–π –∞—É–¥–∏–æ',
#            'wake up': 'Wake the fuck up {}, we have a city to burn. ‚ö†Ô∏è',
#            'error_connect': 'Bruh, you are not connected to voice chat!',
#            'error_command_mistake': 'I think you made a mistake. \nCheck #help <command> to get more information.‚ùå'}



# @bot.event
# async def on_message(message):
#     if '–≥–ª–µ–±' in message.content.lower() or 'tess' in message.content.lower():
#         emojis = ['üá≥üáÆüá®üá™üá¨üá∫üáæ', 'üÜíüöπ']
#         emo = random.choice(emojis)
#         for emoji in emo:
#             await message.add_reaction(emoji)



# async def access_test(ctx):
#     if "bot master" not in [role.name.lower() for role in ctx.author.roles]:
#         await ctx.send(f'Access is denied ‚õî')
#         return False
#     return True